JSON Usage Guide
----------------

A recent fix addressed build errors related to JSON handling in the C++ backend. The issue was incorrect usage of the `Json::Value` class.

How to use `Json::Value` from `server/include/json/json.h`:

1.  Creating JSON objects:
    Use the static factory method `createObject()`.
    Example: `Json::Value my_object = Json::Value::createObject();`

2.  Creating JSON arrays:
    Use the static factory method `createArray()`.
    Example: `Json::Value my_array = Json::Value::createArray();`

3.  Creating primitive values:
    Use the constructors directly.
    - `Json::Value(123)` for integers.
    - `Json::Value(123.45)` for doubles.
    - `Json::Value("my string")` for strings.
    - `Json::Value(true)` for booleans.
    - `Json::Value()` for a null value.

4.  Building a JSON structure:
    my_object["key"] = "value";
    my_array.append(1);
    my_array.append("two");
    my_object["data"] = my_array;

This simple JSON library is custom to this project. Please adhere to this usage to avoid build issues. 